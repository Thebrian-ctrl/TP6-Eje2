/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tp6_eje2;

import Clases.Categoria;
import Clases.Producto;
import java.util.TreeSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author paula
 */
public class AdministacionProductos extends javax.swing.JInternalFrame {

    /**
     * Creates new form AdministacionProductos
     */
    
    TreeSet<Producto> pro = new TreeSet<>();
    DefaultTableModel modeloTabla = new DefaultTableModel();
    
    Producto productoActualizado = new Producto();
    public AdministacionProductos() {
        initComponents();
        cargarCombo();
        inicializarTabla();
        desactivar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboFiltrarCategoria = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProductos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextCodigo = new javax.swing.JTextField();
        jTextDescripcion = new javax.swing.JTextField();
        jTextPrecio = new javax.swing.JTextField();
        jComboRubro = new javax.swing.JComboBox<>();
        jSpinnerStock = new javax.swing.JSpinner();
        jButtonBuscar = new javax.swing.JButton();
        jButtonCerrar = new javax.swing.JButton();
        jButtonNuevo = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();

        setForeground(java.awt.Color.white);
        setTitle("De Todo S.A : Productos");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Gestion de Productos");

        jLabel2.setText("Filtrar Por Categoria:");

        jComboFiltrarCategoria.setBorder(null);
        jComboFiltrarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboFiltrarCategoriaActionPerformed(evt);
            }
        });

        jTableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProductos);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        jLabel3.setText("Codigo:");

        jLabel4.setText("Descripcion:");

        jLabel5.setText("Precio:");

        jLabel6.setText("Rubro:");

        jLabel7.setText("Stock:");

        jTextCodigo.setEnabled(false);
        jTextCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextCodigoFocusLost(evt);
            }
        });

        jTextDescripcion.setEnabled(false);
        jTextDescripcion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextDescripcionFocusLost(evt);
            }
        });

        jTextPrecio.setEnabled(false);
        jTextPrecio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextPrecioFocusLost(evt);
            }
        });

        jComboRubro.setEnabled(false);

        jSpinnerStock.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextCodigo)
                        .addComponent(jTextDescripcion)
                        .addComponent(jTextPrecio)
                        .addComponent(jComboRubro, 0, 212, Short.MAX_VALUE))
                    .addComponent(jSpinnerStock, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addComponent(jComboRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jSpinnerStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/lupa.png"))); // NOI18N
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonCerrar.setText("Cerrar");
        jButtonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarActionPerformed(evt);
            }
        });

        jButtonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.png"))); // NOI18N
        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.setEnabled(false);
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/actualizar.png"))); // NOI18N
        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.setEnabled(false);
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/eliminar.png"))); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jButtonNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jButtonActualizar)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jButtonEliminar))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonCerrar))
                                .addGap(21, 21, 21))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(75, 75, 75)
                .addComponent(jComboFiltrarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboFiltrarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCerrar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonActualizar)
                    .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCerrarActionPerformed

    private void jComboFiltrarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboFiltrarCategoriaActionPerformed
        
        Categoria categoriaSeleccionada = (Categoria) jComboFiltrarCategoria.getSelectedItem();
        
        llenarTabla();
        
        
        
    }//GEN-LAST:event_jComboFiltrarCategoriaActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        // TODO add your handling code here:
        activar();
        jButtonGuardar.setEnabled(true);
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jTextCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextCodigoFocusLost
        // TODO add your handling code here:
        String valor = "[0-9]*";
        
        if(!jTextCodigo.getText().matches(valor)){
            JOptionPane.showMessageDialog(this, "Solo se permiten numeros en el cuadro de Codigo.");
            jTextCodigo.requestFocus();
        }
    }//GEN-LAST:event_jTextCodigoFocusLost

    private void jTextDescripcionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextDescripcionFocusLost
        // TODO add your handling code here:
        if(jTextDescripcion.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Por favor, ingrese una descripcion.");
            jTextDescripcion.requestFocus();
        }
    }//GEN-LAST:event_jTextDescripcionFocusLost

    private void jTextPrecioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextPrecioFocusLost
        // TODO add your handling code here:
        try{
        double precio = Double.parseDouble(jTextPrecio.getText());
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Ingrese un precio correcto.");
            jTextPrecio.requestFocus();
        }
    }//GEN-LAST:event_jTextPrecioFocusLost

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        
        if(!validarCampos()){
            return;
        }
        Producto produ = new Producto();
        produ.setCodigo(Integer.parseInt(jTextCodigo.getText()));
        produ.setDescripcion(jTextDescripcion.getText());
        produ.setPrecio(Double.parseDouble(jTextPrecio.getText()));
        produ.setRubro((Categoria)jComboRubro.getSelectedItem());
        produ.setStock((Integer)jSpinnerStock.getValue());
        
        pro.add(produ);
        DeTodoSA.listaProductos.add(produ);
        limpiarCampos();
        desactivar();
        jButtonGuardar.setEnabled(false);
        llenarTabla();
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jTableProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProductosMouseClicked
        // TODO add your handling code here:
        jButtonActualizar.setEnabled(true);
        jButtonEliminar.setEnabled(true);
        
        int filaSeleccionada = jTableProductos.getSelectedRow();
        
        if(filaSeleccionada!=-1){
            
           
           
            int codigo = (Integer)jTableProductos.getValueAt(filaSeleccionada, 0);
            String descripcion = (String)jTableProductos.getValueAt(filaSeleccionada, 1);
            double precio = (Double)jTableProductos.getValueAt(filaSeleccionada, 2);
            Categoria rubro = (Categoria)jTableProductos.getValueAt(filaSeleccionada, 3);
            int stock = (Integer)jTableProductos.getValueAt(filaSeleccionada, 4);
            
            jTextCodigo.setText(codigo+"");
            jTextDescripcion.setText(descripcion);
            jTextPrecio.setText(precio+"");
            jComboRubro.setSelectedItem(rubro);
            jSpinnerStock.setValue(stock);
            
            activar();
            
            productoActualizado =new Producto();
            productoActualizado.setCodigo(codigo);
            productoActualizado.setDescripcion(descripcion);
            productoActualizado.setPrecio(precio);
            productoActualizado.setRubro(rubro);
            productoActualizado.setStock(stock);
        }
    }//GEN-LAST:event_jTableProductosMouseClicked

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        // TODO add your handling code here:
        
        if(productoActualizado ==null)return;
            int codigo = Integer.parseInt(jTextCodigo.getText());
            String descripcion = jTextDescripcion.getText();
            double precio = Double.parseDouble(jTextPrecio.getText());
            Categoria carNueva = (Categoria)jComboRubro.getSelectedItem();
            int sotck = (Integer) jSpinnerStock.getValue();
            
            productoActualizado.setCodigo(codigo);
            productoActualizado.setDescripcion(descripcion);
            productoActualizado.setPrecio(precio);
            productoActualizado.setRubro(carNueva);
            productoActualizado.setStock(sotck);
            
            modificarProducto(productoActualizado);
            
            productoActualizado=null;
            
            limpiarCampos();
            desactivar();
            llenarTabla();
            jButtonActualizar.setEnabled(false);
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        
        if (productoActualizado == null)return;
        
        borrarProducto(productoActualizado);
        desactivar();
        llenarTabla();
        jButtonEliminar.setEnabled(false);
        limpiarCampos();
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
       
        
        if(jTextCodigo.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese un codigo a buscar", "ERROR_MENSSAGE",JOptionPane.QUESTION_MESSAGE);
            jTextCodigo.requestFocus();
            return;
        }
        
        try{
            int codigoBuscando = Integer.parseInt(jTextCodigo.getText());
            boolean encontrado= false;
            
            for(Producto p : pro){
                if(p.getCodigo()== codigoBuscando){
                    // cargamos los datos del producto en los campos
                    
                    jTextDescripcion.setText(p.getDescripcion());
                    jTextPrecio.setText(String.valueOf(p.getPrecio()));
                    jComboRubro.setSelectedItem(p.getRubro());
                    jSpinnerStock.setValue(p.getStock());
                    
                    
                    //guardo el producto para actualizarlo o eliminarlo
                    productoActualizado=p;
                    activar();
                    jButtonActualizar.setEnabled(true);
                    jButtonEliminar.setEnabled(true);
                    encontrado=true;
                    break;
                }
            }
            if(!encontrado){
                JOptionPane.showMessageDialog(null, "No se encontro productO con ese codigo",
                "PRODUCTO NO ENCONTRADO", JOptionPane.ERROR_MESSAGE);
                
                
                limpiarCampos();
                
                
            }
            
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "El codigo debe tener un valor numerico", "CAMPO INVALIDO",JOptionPane.WARNING_MESSAGE);
            jTextCodigo.requestFocus();
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCerrar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JComboBox<Categoria> jComboFiltrarCategoria;
    private javax.swing.JComboBox<Categoria> jComboRubro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerStock;
    private javax.swing.JTable jTableProductos;
    private javax.swing.JTextField jTextCodigo;
    private javax.swing.JTextField jTextDescripcion;
    private javax.swing.JTextField jTextPrecio;
    // End of variables declaration//GEN-END:variables

private void cargarCombo(){
    jComboFiltrarCategoria.addItem(Categoria.COMESTIBLE);
    jComboFiltrarCategoria.addItem(Categoria.LIMPIEZA);
    jComboFiltrarCategoria.addItem(Categoria.PERFUMERIA);
    
    jComboRubro.addItem(Categoria.COMESTIBLE);
    jComboRubro.addItem(Categoria.LIMPIEZA);
    jComboRubro.addItem(Categoria.PERFUMERIA);
    
    
    
}
private void inicializarTabla(){
        modeloTabla.addColumn("Codigo");
        modeloTabla.addColumn("Descripcion");
        modeloTabla.addColumn("Precio");
        modeloTabla.addColumn("Categoria");
        modeloTabla.addColumn("Stock");
        
        jTableProductos.setModel(modeloTabla);
            
        
        
    }

private void activar(){
    jTextCodigo.setEnabled(true);
    jTextDescripcion.setEnabled(true);
    jTextPrecio.setEnabled(true);
    jComboRubro.setEnabled(true);
    jSpinnerStock.setEnabled(true);
    

}

private void desactivar(){
    jTextCodigo.setEnabled(false);
    jTextDescripcion.setEnabled(false);
    jTextPrecio.setEnabled(false);
    jComboRubro.setEnabled(false);
    jSpinnerStock.setEnabled(false);

}

private boolean validarCampos(){
    if(jTextCodigo.getText().isEmpty() ||
            jTextDescripcion.getText().isEmpty()||
            jTextPrecio.getText().isEmpty() ||
            jComboRubro.getSelectedItem() == null ) {
        JOptionPane.showMessageDialog(this, "Ingrese los valores a guardar");
        return false;
    }
           
    return true;
}

private void limpiarCampos(){
    jTextCodigo.setText("");
    jTextDescripcion.setText("");
    jTextPrecio.setText("");
    jComboRubro.setSelectedIndex(0);
    jSpinnerStock.setValue(0);

}
    private void llenarTabla(){
        Categoria seleccionada = (Categoria)jComboFiltrarCategoria.getSelectedItem();
       // borrarFilas();    VEO COMO FUNCIONA
       modeloTabla.setRowCount(0); // borramos todas las filas
        if(seleccionada!= null){
            for (Producto p : DeTodoSA.listaProductos) {
                if(p.getRubro().equals(seleccionada)){
                modeloTabla.addRow(new Object[]{p.getCodigo(), p.getDescripcion(), p.getPrecio(), p.getRubro(), p.getStock()});
                
                }
            }
    }
    
    }
    
    private void borrarFilas(){
        int f = modeloTabla.getRowCount()-1;
        
        for (int i = f; i >= 0; i--) {
            modeloTabla.removeRow(i);
        }
    }
   
    private void modificarProducto(Producto productoActualizado){
    
        for (Producto a : pro) {
            if( a.getCodigo()== productoActualizado.getCodigo()){
                a.setCodigo(productoActualizado.getCodigo());
                a.setDescripcion(productoActualizado.getDescripcion());
                a.setPrecio(productoActualizado.getPrecio());
                a.setRubro(productoActualizado.getRubro());
                a.setStock(productoActualizado.getStock());
            
            }
        }
         for (Producto a : DeTodoSA.listaProductos) {
            if( a.getCodigo()== productoActualizado.getCodigo()){
                a.setCodigo(productoActualizado.getCodigo());
                a.setDescripcion(productoActualizado.getDescripcion());
                a.setPrecio(productoActualizado.getPrecio());
                a.setRubro(productoActualizado.getRubro());
                a.setStock(productoActualizado.getStock());
            
            }
        }
    
    }
    
    private void borrarProducto(Producto produ){
    
        pro.remove(produ);
        DeTodoSA.listaProductos.remove(produ);
    }
}
